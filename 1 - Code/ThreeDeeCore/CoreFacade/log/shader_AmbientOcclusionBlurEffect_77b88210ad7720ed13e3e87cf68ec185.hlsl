/**************************
***** Compiler Parameters *****
***************************
@P EffectName: AmbientOcclusionBlurEffect
@P   - AmbientOcclusionBlur.VerticalBlur: False
@P AmbientOcclusionBlur.Count: 5
@P AmbientOcclusionBlur.BlurScale: 1,85
@P AmbientOcclusionBlur.EdgeSharpness: 3
***************************
****  ConstantBuffers  ****
***************************
cbuffer PerDraw [Size: 64]
@C    MatrixTransform_id72 => SpriteBase.MatrixTransform
cbuffer PerView [Size: 32]
@C    NearClipPlane_id73 => Camera.NearClipPlane
@C    FarClipPlane_id74 => Camera.FarClipPlane
@C    ZProjection_id75 => Camera.ZProjection
@C    ViewSize_id76 => Camera.ViewSize
@C    AspectRatio_id77 => Camera.AspectRatio
cbuffer Globals [Size: 160]
@C    Texture0TexelSize_id14 => Texturing.Texture0TexelSize
@C    Texture1TexelSize_id16 => Texturing.Texture1TexelSize
@C    Texture2TexelSize_id18 => Texturing.Texture2TexelSize
@C    Texture3TexelSize_id20 => Texturing.Texture3TexelSize
@C    Texture4TexelSize_id22 => Texturing.Texture4TexelSize
@C    Texture5TexelSize_id24 => Texturing.Texture5TexelSize
@C    Texture6TexelSize_id26 => Texturing.Texture6TexelSize
@C    Texture7TexelSize_id28 => Texturing.Texture7TexelSize
@C    Texture8TexelSize_id30 => Texturing.Texture8TexelSize
@C    Texture9TexelSize_id32 => Texturing.Texture9TexelSize
@C    Weights_id82 => AmbientOcclusionBlurShader.Weights
***************************
******  Resources    ******
***************************
@R    PerDraw => PerDraw [Stage: Vertex, Slot: (0-0)]
@R    LinearSampler_id43 => Texturing.LinearSampler [Stage: Pixel, Slot: (0-0)]
@R    Texture0_id13 => Texturing.Texture0 [Stage: Pixel, Slot: (0-0)]
@R    Texture1_id15 => Texturing.Texture1 [Stage: Pixel, Slot: (1-1)]
@R    PerView => PerView [Stage: Pixel, Slot: (0-0)]
@R    Globals => Globals [Stage: Pixel, Slot: (1-1)]
***************************
*****     Sources     *****
***************************
@S    AmbientOcclusionBlurShader => 4596f90f902b5bbc26d1d8cb01bf8b57
@S    ImageEffectShader => 31376a3f3da836cbe499b1374d52b9a7
@S    SpriteBase => a411b8f5112d9bc821268e8c81e1a94c
@S    ShaderBase => 5c3160ccbf936c5e102bd9315f0f946a
@S    ShaderBaseStream => f699080594ac63c1f38140de57ce1a7b
@S    Texturing => a9d9ee1fb9a68af7ce6b12291686faea
@S    Camera => ec417735d81c9ad1d80ca0e6d87138b0
***************************
*****     Stages      *****
***************************
@G    Vertex => 79eb7ff071584feaa45b858a38e87b6a
//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
//
//
// Buffer Definitions: 
//
// cbuffer PerDraw
// {
//
//   float4x4 MatrixTransform_id72;     // Offset:    0 Size:    64
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// PerDraw                           cbuffer      NA          NA    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[4], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
//
// Initial variable locations:
//   v0.x <- __input__.Position_id71.x; v0.y <- __input__.Position_id71.y; v0.z <- __input__.Position_id71.z; v0.w <- __input__.Position_id71.w; 
//   v1.x <- __input__.TexCoord_id61.x; v1.y <- __input__.TexCoord_id61.y; 
//   o1.x <- <VSMain return value>.TexCoord_id61.x; o1.y <- <VSMain return value>.TexCoord_id61.y; 
//   o0.x <- <VSMain return value>.ShadingPosition_id0.x; o0.y <- <VSMain return value>.ShadingPosition_id0.y; o0.z <- <VSMain return value>.ShadingPosition_id0.z; o0.w <- <VSMain return value>.ShadingPosition_id0.w
//
#line 111 "C:\Development\three-dee\1 - Code\ThreeDeeCore\CoreFacade\log\shader_AmbientOcclusionBlurEffect_77b88210ad7720ed13e3e87cf68ec185.hlsl"
dp4 o0.x, v0.xyzw, cb0[0].xyzw
dp4 o0.y, v0.xyzw, cb0[1].xyzw
dp4 o0.z, v0.xyzw, cb0[2].xyzw
dp4 o0.w, v0.xyzw, cb0[3].xyzw

#line 115
mov o1.xy, v1.xyxx
ret 
// Approximately 6 instruction slots used
@G    Pixel => 4095391117bae3c389b52cdbe2c2ccf3
//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
//
//
// Buffer Definitions: 
//
// cbuffer PerView
// {
//
//   float NearClipPlane_id73;          // Offset:    0 Size:     4 [unused]
//      = 0x3f800000 
//   float FarClipPlane_id74;           // Offset:    4 Size:     4 [unused]
//      = 0x42c80000 
//   float2 ZProjection_id75;           // Offset:    8 Size:     8
//   float2 ViewSize_id76;              // Offset:   16 Size:     8 [unused]
//   float AspectRatio_id77;            // Offset:   24 Size:     4 [unused]
//
// }
//
// cbuffer Globals
// {
//
//   float2 Texture0TexelSize_id14;     // Offset:    0 Size:     8
//   float2 Texture1TexelSize_id16;     // Offset:    8 Size:     8 [unused]
//   float2 Texture2TexelSize_id18;     // Offset:   16 Size:     8 [unused]
//   float2 Texture3TexelSize_id20;     // Offset:   24 Size:     8 [unused]
//   float2 Texture4TexelSize_id22;     // Offset:   32 Size:     8 [unused]
//   float2 Texture5TexelSize_id24;     // Offset:   40 Size:     8 [unused]
//   float2 Texture6TexelSize_id26;     // Offset:   48 Size:     8 [unused]
//   float2 Texture7TexelSize_id28;     // Offset:   56 Size:     8 [unused]
//   float2 Texture8TexelSize_id30;     // Offset:   64 Size:     8 [unused]
//   float2 Texture9TexelSize_id32;     // Offset:   72 Size:     8 [unused]
//   float Weights_id82[5];             // Offset:   80 Size:    68
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// LinearSampler_id43                sampler      NA          NA    0        1
// Texture0_id13                     texture  float4          2d    0        1
// Texture1_id15                     texture  float4          2d    1        1
// PerView                           cbuffer      NA          NA    0        1
// Globals                           cbuffer      NA          NA    1        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[1], immediateIndexed
dcl_constantbuffer cb1[10], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 6
//
// Initial variable locations:
//   v0.x <- __input__.ShadingPosition_id0.x; v0.y <- __input__.ShadingPosition_id0.y; v0.z <- __input__.ShadingPosition_id0.z; v0.w <- __input__.ShadingPosition_id0.w; 
//   v1.x <- __input__.TexCoord_id61.x; v1.y <- __input__.TexCoord_id61.y; 
//   o0.x <- <PSMain return value>.ColorTarget_id1.x; o0.y <- <PSMain return value>.ColorTarget_id1.y; o0.z <- <PSMain return value>.ColorTarget_id1.z; o0.w <- <PSMain return value>.ColorTarget_id1.w
//
#line 71 "C:\Development\three-dee\1 - Code\ThreeDeeCore\CoreFacade\log\shader_AmbientOcclusionBlurEffect_77b88210ad7720ed13e3e87cf68ec185.hlsl"
sample_indexable(texture2d)(float,float,float,float) r0.xyz, v1.xyxx, t0.xyzw, s0
mul r0.xyz, r0.xyzx, cb1[5].xxxx  // r0.x <- sum.x; r0.y <- sum.y; r0.z <- sum.z
sample_indexable(texture2d)(float,float,float,float) r0.w, v1.xyxx, t1.yzwx, s0

#line 64
add r0.w, r0.w, -cb0[0].z
div r0.w, cb0[0].w, r0.w  // r0.w <- <reconstructCSZ_id3 return value>

#line 80
lt r1.x, r0.w, l(300.000000)

#line 87
mad r2.xyzw, cb1[0].xyxy, l(-1.850000, -0.000000, 1.850000, 0.000000), v1.xyxy
sample_indexable(texture2d)(float,float,float,float) r1.y, r2.xyxx, t0.yxzw, s0  // r1.y <- value
sample_indexable(texture2d)(float,float,float,float) r1.z, r2.xyxx, t1.yzxw, s0
sample_indexable(texture2d)(float,float,float,float) r1.w, r2.zwzz, t0.yzwx, s0  // r1.w <- value
sample_indexable(texture2d)(float,float,float,float) r2.x, r2.zwzz, t1.xyzw, s0
mad r3.xyzw, cb1[0].xyxy, l(-3.700000, -0.000000, 3.700000, 0.000000), v1.xyxy
sample_indexable(texture2d)(float,float,float,float) r2.y, r3.xyxx, t0.yxzw, s0  // r2.y <- value
sample_indexable(texture2d)(float,float,float,float) r2.z, r3.xyxx, t1.yzxw, s0
sample_indexable(texture2d)(float,float,float,float) r2.w, r3.zwzz, t0.yzwx, s0  // r2.w <- value
sample_indexable(texture2d)(float,float,float,float) r3.x, r3.zwzz, t1.xyzw, s0
mad r4.xyzw, cb1[0].xyxy, l(-5.550000, -0.000000, 5.550000, 0.000000), v1.xyxy
sample_indexable(texture2d)(float,float,float,float) r3.y, r4.xyxx, t0.yxzw, s0  // r3.y <- value
sample_indexable(texture2d)(float,float,float,float) r3.z, r4.xyxx, t1.yzxw, s0
sample_indexable(texture2d)(float,float,float,float) r3.w, r4.zwzz, t0.yzwx, s0  // r3.w <- value
sample_indexable(texture2d)(float,float,float,float) r4.x, r4.zwzz, t1.xyzw, s0
mad r5.xyzw, cb1[0].xyxy, l(-7.400000, -0.000000, 7.400000, 0.000000), v1.xyxy
sample_indexable(texture2d)(float,float,float,float) r4.y, r5.xyxx, t0.yxzw, s0  // r4.y <- value
sample_indexable(texture2d)(float,float,float,float) r4.z, r5.xyxx, t1.yzxw, s0
sample_indexable(texture2d)(float,float,float,float) r4.w, r5.zwzz, t0.yzwx, s0  // r4.w <- value
sample_indexable(texture2d)(float,float,float,float) r5.x, r5.zwzz, t1.xyzw, s0

#line 80
if_nz r1.x

#line 86
  add r1.x, cb1[6].x, l(0.300000)  // r1.x <- weight

#line 64
  add r1.z, r1.z, -cb0[0].z
  div r1.z, cb0[0].w, r1.z  // r1.z <- <reconstructCSZ_id3 return value>

#line 89
  add r1.z, r0.w, -r1.z
  mad r1.z, -|r1.z|, l(3.000000), l(1.000000)
  max r1.z, r1.z, l(0.000000)
  mul r5.y, r1.z, r1.x  // r5.y <- weight
  mad r5.yzw, r1.yyyy, r5.yyyy, r0.xxyz  // r5.y <- sum.x; r5.z <- sum.y; r5.w <- sum.z
  mad r1.y, r1.x, r1.z, cb1[5].x  // r1.y <- totalWeight

#line 64
  add r1.z, r2.x, -cb0[0].z
  div r1.z, cb0[0].w, r1.z  // r1.z <- <reconstructCSZ_id3 return value>

#line 89
  add r1.z, r0.w, -r1.z
  mad r1.z, -|r1.z|, l(3.000000), l(1.000000)
  max r1.z, r1.z, l(0.000000)
  mul r2.x, r1.z, r1.x  // r2.x <- weight
  mad r5.yzw, r1.wwww, r2.xxxx, r5.yyzw
  mad r1.x, r1.x, r1.z, r1.y  // r1.x <- totalWeight

#line 86
  add r1.y, cb1[7].x, l(0.300000)  // r1.y <- weight

#line 64
  add r1.z, r2.z, -cb0[0].z
  div r1.z, cb0[0].w, r1.z  // r1.z <- <reconstructCSZ_id3 return value>

#line 89
  add r1.z, r0.w, -r1.z
  mad r1.z, -|r1.z|, l(3.000000), l(1.000000)
  max r1.z, r1.z, l(0.000000)
  mul r1.w, r1.z, r1.y  // r1.w <- weight
  mad r2.xyz, r2.yyyy, r1.wwww, r5.yzwy  // r2.x <- sum.x; r2.y <- sum.y; r2.z <- sum.z
  mad r1.x, r1.y, r1.z, r1.x

#line 64
  add r1.z, r3.x, -cb0[0].z
  div r1.z, cb0[0].w, r1.z  // r1.z <- <reconstructCSZ_id3 return value>

#line 89
  add r1.z, r0.w, -r1.z
  mad r1.z, -|r1.z|, l(3.000000), l(1.000000)
  max r1.z, r1.z, l(0.000000)
  mul r1.w, r1.z, r1.y
  mad r2.xyz, r2.wwww, r1.wwww, r2.xyzx
  mad r1.x, r1.y, r1.z, r1.x

#line 86
  add r1.y, cb1[8].x, l(0.300000)  // r1.y <- weight

#line 64
  add r1.z, r3.z, -cb0[0].z
  div r1.z, cb0[0].w, r1.z  // r1.z <- <reconstructCSZ_id3 return value>

#line 89
  add r1.z, r0.w, -r1.z
  mad r1.z, -|r1.z|, l(3.000000), l(1.000000)
  max r1.z, r1.z, l(0.000000)
  mul r1.w, r1.z, r1.y  // r1.w <- weight
  mad r2.xyz, r3.yyyy, r1.wwww, r2.xyzx
  mad r1.x, r1.y, r1.z, r1.x

#line 64
  add r1.z, r4.x, -cb0[0].z
  div r1.z, cb0[0].w, r1.z  // r1.z <- <reconstructCSZ_id3 return value>

#line 89
  add r1.z, r0.w, -r1.z
  mad r1.z, -|r1.z|, l(3.000000), l(1.000000)
  max r1.z, r1.z, l(0.000000)
  mul r1.w, r1.z, r1.y
  mad r2.xyz, r3.wwww, r1.wwww, r2.xyzx
  mad r1.x, r1.y, r1.z, r1.x

#line 86
  add r1.y, cb1[9].x, l(0.300000)  // r1.y <- weight

#line 64
  add r1.z, r4.z, -cb0[0].z
  div r1.z, cb0[0].w, r1.z  // r1.z <- <reconstructCSZ_id3 return value>

#line 89
  add r1.z, r0.w, -r1.z
  mad r1.z, -|r1.z|, l(3.000000), l(1.000000)
  max r1.z, r1.z, l(0.000000)
  mul r1.w, r1.z, r1.y  // r1.w <- weight
  mad r2.xyz, r4.yyyy, r1.wwww, r2.xyzx
  mad r1.x, r1.y, r1.z, r1.x

#line 64
  add r1.z, r5.x, -cb0[0].z
  div r1.z, cb0[0].w, r1.z  // r1.z <- <reconstructCSZ_id3 return value>

#line 89
  add r0.w, r0.w, -r1.z
  mad r0.w, -|r0.w|, l(3.000000), l(1.000000)
  max r0.w, r0.w, l(0.000000)
  mul r1.z, r0.w, r1.y  // r1.z <- weight
  mad r2.xyz, r4.wwww, r1.zzzz, r2.xyzx
  mad r0.w, r1.y, r0.w, r1.x  // r0.w <- totalWeight

#line 94
  add r0.w, r0.w, l(0.000100)
  div r1.xyz, r2.xyzx, r0.wwww  // r1.x <- sum.x; r1.y <- sum.y; r1.z <- sum.z
else   // Prior locations: r0.x <- sum.x; r0.y <- sum.y; r0.z <- sum.z

#line 75
  add r0.w, cb1[5].x, l(0.000100)
  div r1.xyz, r0.xyzx, r0.wwww  // r1.x <- sum.x; r1.y <- sum.y; r1.z <- sum.z

#line 95
endif 

#line 104
mov o0.xyz, r1.xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 104 instruction slots used
***************************
*************************/
const static int BlurCount_id78 = 5;
const static bool IsVertical_id79 = false;
const static float BlurScale_id80 = 1.85;
const static float EdgeSharpness_id81 = 3;
Texture2D Texture0_id13;
Texture2D Texture1_id15;
SamplerState LinearSampler_id43 
{
    Filter = MIN_MAG_MIP_LINEAR;
};
struct PS_STREAMS 
{
    float2 TexCoord_id61;
    float4 ColorTarget_id1;
};
struct PS_OUTPUT 
{
    float4 ColorTarget_id1 : SV_Target0;
};
struct VS_STREAMS 
{
    float4 Position_id71;
    float2 TexCoord_id61;
    float4 ShadingPosition_id0;
};
struct VS_OUTPUT 
{
    float4 ShadingPosition_id0 : SV_Position;
    float2 TexCoord_id61 : TEXCOORD0;
};
struct VS_INPUT 
{
    float4 Position_id71 : POSITION;
    float2 TexCoord_id61 : TEXCOORD0;
};
cbuffer PerDraw 
{
    float4x4 MatrixTransform_id72;
};
cbuffer PerView 
{
    float NearClipPlane_id73 = 1.0f;
    float FarClipPlane_id74 = 100.0f;
    float2 ZProjection_id75;
    float2 ViewSize_id76;
    float AspectRatio_id77;
};
cbuffer Globals 
{
    float2 Texture0TexelSize_id14;
    float2 Texture1TexelSize_id16;
    float2 Texture2TexelSize_id18;
    float2 Texture3TexelSize_id20;
    float2 Texture4TexelSize_id22;
    float2 Texture5TexelSize_id24;
    float2 Texture6TexelSize_id26;
    float2 Texture7TexelSize_id28;
    float2 Texture8TexelSize_id30;
    float2 Texture9TexelSize_id32;
    float Weights_id82[BlurCount_id78];
};
float reconstructCSZ_id3(float depth)
{
    return ZProjection_id75.y / (depth - ZProjection_id75.x);
}
float4 Shading_id4(inout PS_STREAMS streams)
{
    const float epsilon = 0.0001;
    float2 direction = (IsVertical_id79 ? float2(0, 1) : float2(1, 0)) * Texture0TexelSize_id14;
    float totalWeight = Weights_id82[0];
    float3 sum = Texture0_id13.Sample(LinearSampler_id43, streams.TexCoord_id61).rgb * totalWeight;
    float linearDepth = reconstructCSZ_id3(Texture1_id15.Sample(LinearSampler_id43, streams.TexCoord_id61).x);
    if (linearDepth >= 300)
    {
        sum /= (totalWeight + epsilon);
        return float4(sum, 1);
    }

    [unroll]
    for (int i = 1; i < BlurCount_id78; i++)
    {

        [unroll]
        for (int j = -1; j <= 1; j += 2)
        {
            float weight = 0.3 + Weights_id82[i];
            float value = Texture0_id13.Sample(LinearSampler_id43, streams.TexCoord_id61 + direction * j * i * BlurScale_id80).rgb;
            float linearDepthOther = reconstructCSZ_id3(Texture1_id15.Sample(LinearSampler_id43, streams.TexCoord_id61 + direction * j * i * BlurScale_id80).x);
            weight *= max(0.0, 1.0 - EdgeSharpness_id81 * abs(linearDepth - linearDepthOther));
            sum += value * weight;
            totalWeight += weight;
        }
    }
    sum /= (totalWeight + epsilon);
    return float4(sum, 1);
}
PS_OUTPUT PSMain(VS_OUTPUT __input__)
{
    PS_STREAMS streams = (PS_STREAMS)0;
    streams.TexCoord_id61 = __input__.TexCoord_id61;
    streams.ColorTarget_id1 = Shading_id4(streams);
    PS_OUTPUT __output__ = (PS_OUTPUT)0;
    __output__.ColorTarget_id1 = streams.ColorTarget_id1;
    return __output__;
}
VS_OUTPUT VSMain(VS_INPUT __input__)
{
    VS_STREAMS streams = (VS_STREAMS)0;
    streams.Position_id71 = __input__.Position_id71;
    streams.TexCoord_id61 = __input__.TexCoord_id61;
    streams.ShadingPosition_id0 = mul(streams.Position_id71, MatrixTransform_id72);
    VS_OUTPUT __output__ = (VS_OUTPUT)0;
    __output__.ShadingPosition_id0 = streams.ShadingPosition_id0;
    __output__.TexCoord_id61 = streams.TexCoord_id61;
    return __output__;
}
