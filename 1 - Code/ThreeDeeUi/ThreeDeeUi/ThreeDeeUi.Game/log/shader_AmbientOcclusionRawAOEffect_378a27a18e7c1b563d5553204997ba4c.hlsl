/**************************
***** Compiler Parameters *****
***************************
@P EffectName: AmbientOcclusionRawAOEffect
@P   - AmbientOcclusionRawAO.Count: 13
***************************
****  ConstantBuffers  ****
***************************
cbuffer PerDraw [Size: 64]
@C    MatrixTransform_id72 => SpriteBase.MatrixTransform
cbuffer PerView [Size: 32]
@C    NearClipPlane_id73 => Camera.NearClipPlane
@C    FarClipPlane_id74 => Camera.FarClipPlane
@C    ZProjection_id75 => Camera.ZProjection
@C    ViewSize_id76 => Camera.ViewSize
@C    AspectRatio_id77 => Camera.AspectRatio
cbuffer Globals [Size: 144]
@C    Texture0TexelSize_id14 => Texturing.Texture0TexelSize
@C    Texture1TexelSize_id16 => Texturing.Texture1TexelSize
@C    Texture2TexelSize_id18 => Texturing.Texture2TexelSize
@C    Texture3TexelSize_id20 => Texturing.Texture3TexelSize
@C    Texture4TexelSize_id22 => Texturing.Texture4TexelSize
@C    Texture5TexelSize_id24 => Texturing.Texture5TexelSize
@C    Texture6TexelSize_id26 => Texturing.Texture6TexelSize
@C    Texture7TexelSize_id28 => Texturing.Texture7TexelSize
@C    Texture8TexelSize_id30 => Texturing.Texture8TexelSize
@C    Texture9TexelSize_id32 => Texturing.Texture9TexelSize
@C    ProjInfo_id79 => AmbientOcclusionRawAOShader.ProjInfo
@C    ScreenInfo_id80 => AmbientOcclusionRawAOShader.ScreenInfo
@C    ParamProjScale_id81 => AmbientOcclusionRawAOShader.ParamProjScale
@C    ParamIntensity_id82 => AmbientOcclusionRawAOShader.ParamIntensity
@C    ParamBias_id83 => AmbientOcclusionRawAOShader.ParamBias
@C    ParamRadius_id84 => AmbientOcclusionRawAOShader.ParamRadius
@C    ParamRadiusSquared_id85 => AmbientOcclusionRawAOShader.ParamRadiusSquared
***************************
******  Resources    ******
***************************
@R    PerDraw => PerDraw [Stage: Vertex, Slot: (0-0)]
@R    Sampler_id41 => Texturing.Sampler [Stage: Pixel, Slot: (0-0)]
@R    Texture0_id13 => Texturing.Texture0 [Stage: Pixel, Slot: (0-0)]
@R    PerView => PerView [Stage: Pixel, Slot: (0-0)]
@R    Globals => Globals [Stage: Pixel, Slot: (1-1)]
***************************
*****     Sources     *****
***************************
@S    AmbientOcclusionRawAOShader => 1a5fb12a8ae4adcd2e31167115c54fd4
@S    ImageEffectShader => 31376a3f3da836cbe499b1374d52b9a7
@S    SpriteBase => a411b8f5112d9bc821268e8c81e1a94c
@S    ShaderBase => 5c3160ccbf936c5e102bd9315f0f946a
@S    ShaderBaseStream => f699080594ac63c1f38140de57ce1a7b
@S    Texturing => a9d9ee1fb9a68af7ce6b12291686faea
@S    Camera => ec417735d81c9ad1d80ca0e6d87138b0
***************************
*****     Stages      *****
***************************
@G    Vertex => 79eb7ff071584feaa45b858a38e87b6a
//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
//
//
// Buffer Definitions: 
//
// cbuffer PerDraw
// {
//
//   float4x4 MatrixTransform_id72;     // Offset:    0 Size:    64
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// PerDraw                           cbuffer      NA          NA    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[4], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
//
// Initial variable locations:
//   v0.x <- __input__.Position_id71.x; v0.y <- __input__.Position_id71.y; v0.z <- __input__.Position_id71.z; v0.w <- __input__.Position_id71.w; 
//   v1.x <- __input__.TexCoord_id61.x; v1.y <- __input__.TexCoord_id61.y; 
//   o1.x <- <VSMain return value>.TexCoord_id61.x; o1.y <- <VSMain return value>.TexCoord_id61.y; 
//   o0.x <- <VSMain return value>.ShadingPosition_id0.x; o0.y <- <VSMain return value>.ShadingPosition_id0.y; o0.z <- <VSMain return value>.ShadingPosition_id0.z; o0.w <- <VSMain return value>.ShadingPosition_id0.w
//
#line 140 "C:\Development\three-dee\1 - Code\ThreeDeeUi\ThreeDeeUi\ThreeDeeUi.Game\log\shader_AmbientOcclusionRawAOEffect_378a27a18e7c1b563d5553204997ba4c.hlsl"
dp4 o0.x, v0.xyzw, cb0[0].xyzw
dp4 o0.y, v0.xyzw, cb0[1].xyzw
dp4 o0.z, v0.xyzw, cb0[2].xyzw
dp4 o0.w, v0.xyzw, cb0[3].xyzw

#line 144
mov o1.xy, v1.xyxx
ret 
// Approximately 6 instruction slots used
@G    Pixel => 794d19ba254c1cc5fd9d6fed01cf3c5e
//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
//
//
// Buffer Definitions: 
//
// cbuffer PerView
// {
//
//   float NearClipPlane_id73;          // Offset:    0 Size:     4 [unused]
//      = 0x3f800000 
//   float FarClipPlane_id74;           // Offset:    4 Size:     4 [unused]
//      = 0x42c80000 
//   float2 ZProjection_id75;           // Offset:    8 Size:     8
//   float2 ViewSize_id76;              // Offset:   16 Size:     8 [unused]
//   float AspectRatio_id77;            // Offset:   24 Size:     4 [unused]
//
// }
//
// cbuffer Globals
// {
//
//   float2 Texture0TexelSize_id14;     // Offset:    0 Size:     8 [unused]
//   float2 Texture1TexelSize_id16;     // Offset:    8 Size:     8 [unused]
//   float2 Texture2TexelSize_id18;     // Offset:   16 Size:     8 [unused]
//   float2 Texture3TexelSize_id20;     // Offset:   24 Size:     8 [unused]
//   float2 Texture4TexelSize_id22;     // Offset:   32 Size:     8 [unused]
//   float2 Texture5TexelSize_id24;     // Offset:   40 Size:     8 [unused]
//   float2 Texture6TexelSize_id26;     // Offset:   48 Size:     8 [unused]
//   float2 Texture7TexelSize_id28;     // Offset:   56 Size:     8 [unused]
//   float2 Texture8TexelSize_id30;     // Offset:   64 Size:     8 [unused]
//   float2 Texture9TexelSize_id32;     // Offset:   72 Size:     8 [unused]
//   float4 ProjInfo_id79;              // Offset:   80 Size:    16
//   float4 ScreenInfo_id80;            // Offset:   96 Size:    16
//   float ParamProjScale_id81;         // Offset:  112 Size:     4
//      = 0x3f800000 
//   float ParamIntensity_id82;         // Offset:  116 Size:     4
//      = 0x3f800000 
//   float ParamBias_id83;              // Offset:  120 Size:     4
//      = 0x3c23d70a 
//   float ParamRadius_id84;            // Offset:  124 Size:     4
//      = 0x3f800000 
//   float ParamRadiusSquared_id85;     // Offset:  128 Size:     4
//      = 0x3f800000 
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// Sampler_id41                      sampler      NA          NA    0        1
// Texture0_id13                     texture  float4          2d    0        1
// PerView                           cbuffer      NA          NA    0        1
// Globals                           cbuffer      NA          NA    1        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[1], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 7
//
// Initial variable locations:
//   v0.x <- __input__.ShadingPosition_id0.x; v0.y <- __input__.ShadingPosition_id0.y; v0.z <- __input__.ShadingPosition_id0.z; v0.w <- __input__.ShadingPosition_id0.w; 
//   v1.x <- __input__.TexCoord_id61.x; v1.y <- __input__.TexCoord_id61.y; 
//   o0.x <- <PSMain return value>.ColorTarget_id1.x; o0.y <- <PSMain return value>.ColorTarget_id1.y; o0.z <- <PSMain return value>.ColorTarget_id1.z; o0.w <- <PSMain return value>.ColorTarget_id1.w
//
#line 97 "C:\Development\three-dee\1 - Code\ThreeDeeUi\ThreeDeeUi\ThreeDeeUi.Game\log\shader_AmbientOcclusionRawAOEffect_378a27a18e7c1b563d5553204997ba4c.hlsl"
sample_l_indexable(texture2d)(float,float,float,float) r0.x, v1.xyxx, t0.xyzw, s0, l(0.000000)  // r0.x <- depth

#line 67
add r0.x, r0.x, -cb0[0].z
div r0.z, cb0[0].w, r0.x  // r0.z <- <reconstructCSZ_id3 return value>

#line 99
mul r1.xy, v1.xyxx, cb1[6].xyxx
ftoi r1.zw, r1.xxxy  // r1.z <- screenPosition.x; r1.w <- screenPosition.y
round_z r1.xy, r1.xyxx
add r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)

#line 63
mad r1.xy, r1.xyxx, cb1[5].xyxx, cb1[5].zwzz
mul r0.xy, r0.zzzz, r1.xyxx  // r0.x <- <reconstructCSPosition_id4 return value>.x; r0.y <- <reconstructCSPosition_id4 return value>.y

#line 101
mov r1.x, -r0.x  // r1.x <- viewPosition.x

#line 93
deriv_rty_coarse r2.y, r1.x
deriv_rty_coarse r2.xz, r0.zzyz
deriv_rtx_coarse r3.z, r1.x
deriv_rtx_coarse r3.xy, r0.yzyy
mul r4.xyz, r2.xyzx, r3.xyzx
mad r2.yzw, r2.zzxy, r3.yyzx, -r4.xxyz
dp3 r1.x, r2.yzwy, r2.yzwy
rsq r1.x, r1.x
mul r2.yzw, r1.xxxx, r2.yyzw  // r2.y <- <reconstructCSNormal_id5 return value>.x; r2.z <- <reconstructCSNormal_id5 return value>.y; r2.w <- <reconstructCSNormal_id5 return value>.z

#line 104
ftoi r1.x, r0.z  // r1.x <- linearDepthInt
imul null, r1.y, r1.z, l(3)
imad r1.x, l(15), r1.x, r1.y
ishl r1.y, r1.w, l(1)
imad r1.y, r1.z, r1.w, r1.y
xor r1.x, r1.y, r1.x
imul null, r1.x, r1.x, l(10)
itof r1.x, r1.x  // r1.x <- randomPatternRotationAngle
div r1.y, cb1[7].x, r0.z  // r1.y <- diskRadius

#line 83
mov r0.w, -r0.x

#line 79
mov r4.zw, l(0,0,0,0)

#line 86
mul r2.yzw, r2.yyzw, l(0.000000, -1.000000, -1.000000, 1.000000)

#line 109
mov r0.x, l(0)  // r0.x <- sum
mov r3.x, l(0)  // r3.x <- i
loop 
  ige r3.z, r3.x, l(13)
  breakc_nz r3.z

#line 71
  itof r3.z, r3.x
  add r3.z, r3.z, l(0.500000)
  mul r3.w, r1.y, r3.z
  mad r3.z, r3.z, l(2.283696), r1.x  // r3.z <- angle
  sincos r5.x, r6.x, r3.z  // r5.x <- offset.y; r6.x <- offset.x
  mul r3.z, r3.w, l(0.051923)  // r3.z <- ssRadius
  mov r6.y, r5.x
  mul r5.xy, r6.xyxx, cb1[6].xyxx
  mul r3.zw, r3.zzzz, r5.xxxy
  ftoi r3.zw, r3.zzzw
  iadd r4.xy, r1.zwzz, r3.zwzz  // r4.x <- samplePosInt.x; r4.y <- samplePosInt.y
  ilt r3.zw, r4.xxxy, l(0, 0, 0, 0)
  or r3.z, r3.w, r3.z
  itof r5.xy, r4.xyxx
  ge r5.zw, r5.xxxy, cb1[6].xxxy
  or r3.z, r3.z, r5.z
  or r3.z, r5.w, r3.z
  if_z r3.z
    ld_indexable(texture2d)(float,float,float,float) r3.z, r4.xyzw, t0.yzxw  // r3.z <- depth

#line 67
    add r3.z, r3.z, -cb0[0].z
    div r6.z, cb0[0].w, r3.z  // r6.z <- <reconstructCSZ_id3 return value>

#line 81
    add r3.zw, r5.xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)

#line 63
    mad r3.zw, r3.zzzw, cb1[5].xxxy, cb1[5].zzzw
    mul r6.xy, r6.zzzz, r3.zwzz  // r6.x <- <reconstructCSPosition_id4 return value>.x; r6.y <- <reconstructCSPosition_id4 return value>.y

#line 83
    mov r6.w, -r6.x
    add r5.xyz, -r0.wyzw, r6.wyzw  // r5.x <- v.x; r5.y <- v.y; r5.z <- v.z
    mov r5.w, -r5.z
    dp3 r3.z, r5.xywx, r5.xywx  // r3.z <- distSq
    dp3 r3.w, r5.xywx, r2.yzwy  // r3.w <- vn
    add r4.x, -r3.z, cb1[8].x
    max r4.x, r4.x, l(0.000000)  // r4.x <- f
    mul r4.y, r4.x, r4.x
    mul r4.x, r4.x, r4.y
    add r3.w, r3.w, -cb1[7].z
    add r3.z, r3.z, l(0.010000)
    div r3.z, r3.w, r3.z
    max r3.z, r3.z, l(0.000000)
    mul r3.z, r3.z, r4.x  // r3.z <- <sampleAO_id6 return value>
  else   // Prior locations: r6.x <- offset.x; r4.x <- samplePosInt.x; r4.y <- samplePosInt.y
    mov r3.z, l(0)  // r3.z <- <sampleAO_id6 return value>
  endif 

#line 111
  add r0.x, r0.x, r3.z
  iadd r3.x, r3.x, l(1)
endloop 
mul r0.y, cb1[7].w, cb1[8].x  // r0.y <- temp
mul r0.y, r0.y, r0.y
div r0.x, r0.x, r0.y
mul r0.x, r0.x, cb1[7].y
mad r0.x, -r0.x, l(0.384615), l(1.000000)
max r0.x, r0.x, l(0.000000)  // r0.x <- A
lt r0.y, |r3.y|, l(0.020000)
deriv_rtx_coarse r0.z, r0.x

#line 122
and r1.xy, r1.zwzz, l(1, 1, 0, 0)
itof r1.xy, r1.xyxx
add r1.xy, r1.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)

#line 118
mad r0.z, -r0.z, r1.x, r0.x  // r0.z <- A
movc r0.x, r0.y, r0.z, r0.x  // r0.x <- A
lt r0.y, |r2.x|, l(0.020000)
deriv_rty_coarse r0.z, r0.x
mad r0.z, -r0.z, r1.y, r0.x  // r0.z <- A
movc o0.xyzw, r0.yyyy, r0.zzzz, r0.xxxx

#line 133
ret 
// Approximately 98 instruction slots used
***************************
*************************/
const static int SamplesCount_id78 = 13;
Texture2D Texture0_id13;
SamplerState Sampler_id41;
struct PS_STREAMS 
{
    float2 TexCoord_id61;
    float4 ColorTarget_id1;
};
struct PS_OUTPUT 
{
    float4 ColorTarget_id1 : SV_Target0;
};
struct VS_STREAMS 
{
    float4 Position_id71;
    float2 TexCoord_id61;
    float4 ShadingPosition_id0;
};
struct VS_OUTPUT 
{
    float4 ShadingPosition_id0 : SV_Position;
    float2 TexCoord_id61 : TEXCOORD0;
};
struct VS_INPUT 
{
    float4 Position_id71 : POSITION;
    float2 TexCoord_id61 : TEXCOORD0;
};
cbuffer PerDraw 
{
    float4x4 MatrixTransform_id72;
};
cbuffer PerView 
{
    float NearClipPlane_id73 = 1.0f;
    float FarClipPlane_id74 = 100.0f;
    float2 ZProjection_id75;
    float2 ViewSize_id76;
    float AspectRatio_id77;
};
cbuffer Globals 
{
    float2 Texture0TexelSize_id14;
    float2 Texture1TexelSize_id16;
    float2 Texture2TexelSize_id18;
    float2 Texture3TexelSize_id20;
    float2 Texture4TexelSize_id22;
    float2 Texture5TexelSize_id24;
    float2 Texture6TexelSize_id26;
    float2 Texture7TexelSize_id28;
    float2 Texture8TexelSize_id30;
    float2 Texture9TexelSize_id32;
    float4 ProjInfo_id79;
    float4 ScreenInfo_id80;
    float ParamProjScale_id81 = 1;
    float ParamIntensity_id82 = 1;
    float ParamBias_id83 = 0.01f;
    float ParamRadius_id84 = 1;
    float ParamRadiusSquared_id85 = 1;
};
float3 reconstructCSPosition_id4(float2 S, float z)
{
    return float3((S.xy * ProjInfo_id79.xy + ProjInfo_id79.zw) * z, z);
}
float reconstructCSZ_id3(float depth)
{
    return ZProjection_id75.y / (depth - ZProjection_id75.x);
}
float sampleAO_id6(inout PS_STREAMS streams, int2 screenPosition, float3 viewPosition, float3 viewNormal, float diskRadius, int i, float randomPatternRotationAngle)
{
    float alpha = 1 * (i + 0.5) * 0.675f / SamplesCount_id78;
    float angle = 1 * 43.9822971503f * alpha + randomPatternRotationAngle;
    float2 offset = float2(cos(angle), sin(angle));
    float ssRadius = alpha * diskRadius;
    float2 samplePos = streams.TexCoord_id61 + offset * ssRadius;
    int2 samplePosInt = screenPosition + int2(ScreenInfo_id80.xy * offset * ssRadius);
    if (samplePosInt.x < 0 || samplePosInt.y < 0 || samplePosInt.x >= ScreenInfo_id80.x || samplePosInt.y >= ScreenInfo_id80.y)
        return 0;
    float depth = Texture0_id13.Load(int3(samplePosInt, 0));
    float linearDepth = reconstructCSZ_id3(depth);
    float3 position = reconstructCSPosition_id4(samplePosInt + float2(0.5, 0.5), linearDepth);
    position.x *= -1;
    float3 v = position - viewPosition;
    v.z *= -1;
    float distSq = dot(v, v);
    float vn = dot(v, viewNormal);
    const float epsilon = 0.01;
    float f = max(ParamRadiusSquared_id85 - distSq, 0.0);
    return f * f * f * max((vn - ParamBias_id83) / (epsilon + distSq), 0.0);
}
float3 reconstructCSNormal_id5(float3 position)
{
    return normalize(cross(ddy(position), ddx(position)));
}
float4 Shading_id7(inout PS_STREAMS streams)
{
    float depth = Texture0_id13.SampleLevel(Sampler_id41, streams.TexCoord_id61, 0).x;
    float linearDepth = reconstructCSZ_id3(depth);
    int2 screenPosition = streams.TexCoord_id61.xy * ScreenInfo_id80.xy;
    float3 viewPosition = reconstructCSPosition_id4(screenPosition + float2(0.5, 0.5), linearDepth);
    viewPosition.x *= -1;
    float3 viewNormal = reconstructCSNormal_id5(viewPosition.xyz);
    viewNormal.xy *= -1;
    int linearDepthInt = (int)linearDepth;
    float randomPatternRotationAngle = (15 * linearDepthInt + 3 * screenPosition.x ^ 2 * screenPosition.y + screenPosition.x * screenPosition.y) * 10;
    float diskRadius = ParamProjScale_id81 / linearDepth;
    float sum = 0.0;

    for (int i = 0; i < SamplesCount_id78; i++)
    {
        sum += sampleAO_id6(streams, screenPosition, viewPosition, viewNormal, diskRadius, i, randomPatternRotationAngle);
    }
    float temp = ParamRadiusSquared_id85 * ParamRadius_id84;
    sum /= temp * temp;
    float A = max(0.0, 1.0 - sum * 5 * ParamIntensity_id82 / SamplesCount_id78);
    if (abs(ddx(linearDepth)) < 0.02)
    {
        A -= ddx(A) * ((screenPosition.x & 1) - 0.5);
    }
    if (abs(ddy(linearDepth)) < 0.02)
    {
        A -= ddy(A) * ((screenPosition.y & 1) - 0.5);
    }
    return float4(A, A, A, A);
}
PS_OUTPUT PSMain(VS_OUTPUT __input__)
{
    PS_STREAMS streams = (PS_STREAMS)0;
    streams.TexCoord_id61 = __input__.TexCoord_id61;
    streams.ColorTarget_id1 = Shading_id7(streams);
    PS_OUTPUT __output__ = (PS_OUTPUT)0;
    __output__.ColorTarget_id1 = streams.ColorTarget_id1;
    return __output__;
}
VS_OUTPUT VSMain(VS_INPUT __input__)
{
    VS_STREAMS streams = (VS_STREAMS)0;
    streams.Position_id71 = __input__.Position_id71;
    streams.TexCoord_id61 = __input__.TexCoord_id61;
    streams.ShadingPosition_id0 = mul(streams.Position_id71, MatrixTransform_id72);
    VS_OUTPUT __output__ = (VS_OUTPUT)0;
    __output__.ShadingPosition_id0 = streams.ShadingPosition_id0;
    __output__.TexCoord_id61 = streams.TexCoord_id61;
    return __output__;
}
